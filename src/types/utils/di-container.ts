// DI-контейнер - это инструмент, который управляет внедрением зависимотей
// в доменной слой приложения
export interface IDIContainer {
  /**
   * регистрирует сервис в контейнере
   * @param key - Уникальный ключ сервиса (например, имя класса или интерфейса).
   * @param instance - Экземпляр сервиса.
   */
  register<T>(key: string, instance: T): void;
  
  /**
   * Получает сервис из контейнера.
   * @param key - Уникальный ключ сервиса.
   * @returns Экземпляр сервиса.
   * @throws Ошибка, если сервис не найден.
   */
  get<T>(key: string): T;
}
